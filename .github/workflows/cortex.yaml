name: CI - scan and build image

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  # schedule:
  #   - cron: '45 17 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  
jobs:
  cortex-code-scan:
    runs-on: ubuntu-latest
    environment: CortexCloudEnv
    env:
      CORTEX_API_KEY: ${{secrets.CORTEX_API_KEY}}
      CORTEX_API_KEY_ID: ${{secrets.CORTEX_API_KEY_ID}}
      CORTEX_API_URL: https://api-https://bootcamp.xdr.us.paloaltonetworks.com/
      CORTEX_CLI_VERSION: 0.12.0
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Get Temporary Token
      run: |
        TOKEN_RESPONSE=$(curl --location "${CORTEX_API_URL}/public_api/v1/unified-cli/image/token" \
          --header "Authorization: ${CORTEX_API_KEY}" \
          --header "x-xdr-auth-id: ${CORTEX_API_KEY_ID}" \
          --header 'Content-Type: application/json' \
          --data '{}')
        TEMP_TOKEN=$(echo $TOKEN_RESPONSE | jq -r '.token')
        echo "TEMP_TOKEN=$TEMP_TOKEN" >> $GITHUB_ENV

    - name: Pull Docker Image
      run: |
        docker pull distributions.traps.paloaltonetworks.com/cli-docker/${{env.TEMP_TOKEN}}/method:amd64-${{env.CORTEX_CLI_VERSION}}
        docker tag distributions.traps.paloaltonetworks.com/cli-docker/${{env.TEMP_TOKEN}}/method:amd64-${{env.CORTEX_CLI_VERSION}} cortexcli:${{env.CORTEX_CLI_VERSION}}

    - name: Run Docker Container
      run: |
        docker run --rm -v ${{ github.workspace }}:/home/code cortexcli:${{ env.CORTEX_CLI_VERSION }} \
          --api-base-url ${{ env.CORTEX_API_URL }}\
          --api-key ${{ env.CORTEX_API_KEY }} \
          --api-key-id ${{ env.CORTEX_API_KEY_ID }}\
          code scan \
          --directory /home/code \
          --repo-id ${{github.repository}} \
          --branch ${{github.ref_name}} \
          --source 'GITHUB_ACTIONS' \
          --create-repo-if-missing \
          --upload-mode no-upload
  
